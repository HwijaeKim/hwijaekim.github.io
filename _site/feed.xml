<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-02-11T12:50:00+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">HWIJAE KIM</title><subtitle></subtitle><author><name>김휘재 Hwijae Kim</name><email>dusan960766@gmail.com</email></author><entry><title type="html">macOS에서 데스크톱 아이콘 가리기</title><link href="http://localhost:4000/research/macos-desktio-icon-hidden/" rel="alternate" type="text/html" title="macOS에서 데스크톱 아이콘 가리기" /><published>2025-01-12T00:00:00+09:00</published><updated>2025-01-12T00:00:00+09:00</updated><id>http://localhost:4000/research/macos-desktio-icon-hidden</id><content type="html" xml:base="http://localhost:4000/research/macos-desktio-icon-hidden/"><![CDATA[<p>터미널 실행</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defaults write com.apple.finder CreateDesktop <span class="nt">-bool</span> FALSE<span class="p">;</span> killall Finder
</code></pre></div></div>

<p>복귀</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defaults write com.apple.finder CreateDesktop <span class="nt">-bool</span> TRUE<span class="p">;</span> killall Finder
</code></pre></div></div>
<p><br /><br /></p>

<p>터미널 없이 손쉽게 가려주는 유틸리티도 있지만 유료</p>]]></content><author><name>김휘재 Hwijae Kim</name><email>dusan960766@gmail.com</email></author><category term="Research" /><category term="macos" /><category term="terminal" /><summary type="html"><![CDATA[터미널 실행 defaults write com.apple.finder CreateDesktop -bool FALSE; killall Finder]]></summary></entry><entry><title type="html">React 시작 + 문제 해결</title><link href="http://localhost:4000/research/react-start/" rel="alternate" type="text/html" title="React 시작 + 문제 해결" /><published>2024-12-20T00:00:00+09:00</published><updated>2024-12-20T00:00:00+09:00</updated><id>http://localhost:4000/research/react-start</id><content type="html" xml:base="http://localhost:4000/research/react-start/"><![CDATA[<table>
  <tbody>
    <tr>
      <td><strong>참고 강의</strong></td>
      <td><a href="https://hwijaekim.github.io/eatopia2024" target="_blank">coding apple - React 리액트 기초부터 쇼핑몰 프로젝트까지!</a></td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<p><strong><em>Node.js 사전설치 완료</em></strong> <br />
처음에는 <code class="language-plaintext highlighter-rouge">create-react-app</code> 명령어로 시도했지만 추후 vite를 이용함.</p>

<h1 id="vite를-이용한-react-프로젝트-생성">Vite를 이용한 React 프로젝트 생성</h1>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm create vite@latest
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gimhwijae@gimhwijaeui-MacBookPro react01 % npm create vite@latest

<span class="o">&gt;</span> react01@0.0.0 npx
<span class="o">&gt;</span> create-vite

? Project name: › vite-project <span class="o">[</span>프로젝트명 입력]
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>? Select a framework: › - Use arrow-keys. Return to submit.
❯   Vanilla
    Vue
    React
    Preact
    Lit
    Svelte
    Solid
    Qwik
    Angular
    Others
</code></pre></div></div>
<p>방향키를 사용해 React에서 엔터</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>? Select a variant: › - Use arrow-keys. Return to submit.
❯   TypeScript
    TypeScript + SWC
    JavaScript
    JavaScript + SWC
    React Router v7 ↗
</code></pre></div></div>
<p>방향키를 이용해 JavaScript에서 엔터</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Scaffolding project <span class="k">in</span> /Users/gimhwijae/Git/react-practice/react01...

Done. Now run:

  <span class="nb">cd </span>react01
  npm <span class="nb">install
  </span>npm run dev

gimhwijae@gimhwijaeui-MacBookPro react-practice % 
</code></pre></div></div>
<p>다음 명령을 차례로 입력하여 실행</p>

<p><br /></p>

<h2 id="오류-빌생">오류 빌생</h2>
<p>macOS 환경에서 다음과 같은 오류가 발생함</p>
<blockquote>
  <p><sub><code class="language-plaintext highlighter-rouge">failed to load config from /Users/gimhwijae/Git/react-practice/react01/vite.config.js
error when starting dev server:
Error: Build failed with 3 errors:
(define name):1:0: ERROR: Expected identifier but found "import"
(define name):1:0: ERROR: Expected identifier but found "import"
(define name):1:0: ERROR: Expected identifier but found "import"
    at failureErrorWithLog (/Users/gimhwijae/Git/react-practice/react01/node_modules/esbuild/lib/main.js:1476:15)
    at /Users/gimhwijae/Git/react-practice/react01/node_modules/esbuild/lib/main.js:945:25
    at runOnEndCallbacks (/Users/gimhwijae/Git/react-practice/react01/node_modules/esbuild/lib/main.js:1316:45)
    at buildResponseToResult (/Users/gimhwijae/Git/react-practice/react01/node_modules/esbuild/lib/main.js:943:7)
    at /Users/gimhwijae/Git/react-practice/react01/node_modules/esbuild/lib/main.js:970:16
    at responseCallbacks.&lt;computed&gt; (/Users/gimhwijae/Git/react-practice/react01/node_modules/esbuild/lib/main.js:622:9)
    at handleIncomingPacket (/Users/gimhwijae/Git/react-practice/react01/node_modules/esbuild/lib/main.js:677:12)
    at Socket.readFromStdout (/Users/gimhwijae/Git/react-practice/react01/node_modules/esbuild/lib/main.js:600:7)
    at Socket.emit (node:events:519:28)
    at addChunk (node:internal/streams/readable:559:12)</code></sub></p>
</blockquote>

<p><br /></p>

<h3 id="실패과정">실패과정</h3>
<p>Google 검색과 chatGPT를 이용하여 오류를 검색하고 많은 해결법을 시도해 봤지만 여전히 같은 오류가 발생했음. <br />
<br />
<strong>터미널 입력</strong></p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm i react@18 react-dom@18
</code></pre></div></div>
<p>설명: 최근 출시된 리액트19 릴리즈에서 의존성 버전 문제를 일으킨 것으로 추정. 하지만 어디까지나 임시 해결책으로 장기적으로는 권장되지 않음. <br />
<br /></p>

<p>하지만 위와 같은 해결법은 임시 해결법으로 <strong>React 19 출시와 함께 의존성에 대한 오류</strong>가 발생한 것으로 추정되었음.</p>

<p><br /></p>

<h2 id="해결">해결</h2>
<p>Node.js버전은 당시 <strong>v20.17.0</strong>으로 공식적으로는 문제가 없었지만 마지막 방법으로 LTS최신버전인 <strong>v22.12.0</strong> 버전으로 업데이트 함. <br />
결과적으로 문제 없이 <code class="language-plaintext highlighter-rouge">npm run dev</code> 명령어가 작동하였으며 <code class="language-plaintext highlighter-rouge">localhost</code>로 잘 작동함. <br />
<br />
<img src="/assets/images/posts_img/install-react/vite+react.webp" alt="Vite + React" /></p>

<p><br /></p>

<p>하지만 여기서 드는 의문점은 <strong>Windows 환경.</strong> <br />
Windows에서의 Node.js 버전은 <strong>v20.17.0</strong>으로 <strong>macOS와 동일한 버전</strong>이지만 React 환경이 정상적으로 실행됐음 <br />
<img src="/assets/images/posts_img/install-react/win-node.webp" alt="win-node" />
<img src="/assets/images/posts_img/install-react/win-react.webp" alt="win-react" /></p>

<h2><br /></h2>
<p><br /></p>

<h1 id="프로젝트-시작">프로젝트 시작</h1>

<h2 id="기본-형식">기본 형식</h2>
<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">useState</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">reactLogo</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./assets/react.svg</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">viteLogo</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">/vite.svg</span><span class="dl">'</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">./App.css</span><span class="dl">'</span>

<span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">[</span><span class="nx">count</span><span class="p">,</span> <span class="nx">setCount</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

  <span class="k">return</span> <span class="p">(</span>
    <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"black-nav"</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">h4</span><span class="p">&gt;</span>Code Blog.<span class="p">&lt;/</span><span class="nt">h4</span><span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">)</span>
<span class="p">}</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">App</span>
</code></pre></div></div>
<p>기본이 되는 <code class="language-plaintext highlighter-rouge">App.jsx</code>파일. <br />
<code class="language-plaintext highlighter-rouge">return{}</code> 내부에 HTML을 작성하면 된다.
<br /><br />
*<code class="language-plaintext highlighter-rouge">JavaScript</code> 내에서 HTML을 작성할 수 있는 이유는 사실 해당 코드는 HTML이 아닌 JSX이기 때문.
하지만 우리에게 친숙한 HTML 문법을 사용하여 코드를 작성할 수 있도록 보여지는 것.</p>

<p><br /><br /></p>

<h2 id="jsx-내에서-클래스-선언">JSX 내에서 클래스 선언</h2>
<p><sub>틀린 예</sub></p>
<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">classe</span><span class="p">=</span><span class="s">"black-nav"</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">h4</span><span class="p">&gt;</span>Code Blog.<span class="p">&lt;/</span><span class="nt">h4</span><span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></div></div>

<p><sub>옳은 예</sub></p>
<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">classeName</span><span class="p">=</span><span class="s">"black-nav"</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">h4</span><span class="p">&gt;</span>Code Blog.<span class="p">&lt;/</span><span class="nt">h4</span><span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></div></div>
<p>JSX 내에서 클래스를 선언하기 위해 기존 HTML 문법과 같이 <code class="language-plaintext highlighter-rouge">class="test"</code>로 작성해서는 안 된다.
<br /><br />
기본적으로 JSX(JavaScript XML)는 마크업 언어인 HTML과는 다르게 프로그래밍 언어이기 때문에 CSS에서의 <code class="language-plaintext highlighter-rouge">class</code> 아닌 프로그래밍 부분의 <code class="language-plaintext highlighter-rouge">class</code>와 혼동될 수 있다.
<br /><br />
이러한 혼동을 막기 위해 JSX내에서 <code class="language-plaintext highlighter-rouge">div</code>에 클래스를 선언하기 위해서는 <code class="language-plaintext highlighter-rouge">className</code>으로 선언해야 한다.</p>

<p><br /><br /></p>

<h2 id="중괄호-문법">중괄호 문법</h2>
<p>JSX에서는 중괄호 문법을 이용하여 어디든 변수를 선언하고 삽입할 수 있다.</p>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">[</span><span class="nx">count</span><span class="p">,</span> <span class="nx">setCount</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

  <span class="kd">let</span> <span class="nx">post</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">변수선언</span><span class="dl">'</span><span class="p">;</span>

  <span class="k">return</span> <span class="p">(</span>
    <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"black-nav"</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">h4</span><span class="p">&gt;</span>Code Blog.<span class="p">&lt;/</span><span class="nt">h4</span><span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

      <span class="p">&lt;</span><span class="nt">h4</span><span class="p">&gt;</span><span class="si">{</span> <span class="nx">post</span> <span class="si">}</span><span class="p">&lt;/</span><span class="nt">h4</span><span class="p">&gt;</span>

      <span class="p">&lt;</span><span class="nt">h4</span> <span class="na">style</span><span class="p">=</span><span class="si">{</span> <span class="p">{</span><span class="na">color</span><span class="p">:</span> <span class="dl">'</span><span class="s1">blue</span><span class="dl">'</span><span class="p">}</span> <span class="si">}</span><span class="p">&gt;</span>JSX에서 Inline Style은 다음과 같이 작성해야 합니다.<span class="p">&lt;/</span><span class="nt">h4</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>
<p>위와 같이 <code class="language-plaintext highlighter-rouge">let post = '변수선언';</code>와 같이 변수를 선언한다. (문법 자체는 JS와 동일)
<br /><br />
다음 단계부터 JS와의 차이가 존재하는데 실제 JS에서 변수를 선언하고 HTML에 삽입하려면 <code class="language-plaintext highlighter-rouge">document.getElementbyID('title').innetHTML = '변수선언'</code>과 같이 길고 복잡한 코드를 작성해야 했지만 JSX에서는 <code class="language-plaintext highlighter-rouge">{ post }</code>만 작성하면 해당 변수가 삽입된다.</p>

<p><br /><br /></p>

<h2 id="jsx-내에서-인라인-스타일-작성">JSX 내에서 인라인 스타일 작성</h2>
<p>JSX에서 작성하는 인라인 스타일은 HTML과 유사하면서 차이가 존재한다.</p>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="nt">h4</span> <span class="na">style</span><span class="p">=</span><span class="si">{</span> <span class="p">{</span><span class="na">color</span><span class="p">:</span> <span class="dl">'</span><span class="s1">blue</span><span class="dl">'</span><span class="p">,</span> <span class="na">fontSize</span><span class="p">:</span> <span class="dl">'</span><span class="s1">24px</span><span class="dl">'</span><span class="p">}</span> <span class="si">}</span><span class="p">&gt;</span>JSX에서 Inline Style은 다음과 같이 작성해야 합니다.<span class="p">&lt;/</span><span class="nt">h4</span><span class="p">&gt;</span>
</code></pre></div></div>
<p>기본적으로 중괄호가 추가된 모습이고 카멜케이스를 적용하여 작성해야 한다. <br />
예시. <code class="language-plaintext highlighter-rouge">font-size</code> -&gt;  <code class="language-plaintext highlighter-rouge">fontSize</code></p>]]></content><author><name>김휘재 Hwijae Kim</name><email>dusan960766@gmail.com</email></author><category term="Research" /><category term="node.js" /><category term="npm" /><category term="react" /><summary type="html"><![CDATA[참고 강의 coding apple - React 리액트 기초부터 쇼핑몰 프로젝트까지!]]></summary></entry><entry><title type="html">Git 사용</title><link href="http://localhost:4000/research/git/" rel="alternate" type="text/html" title="Git 사용" /><published>2024-11-27T00:00:00+09:00</published><updated>2024-11-27T00:00:00+09:00</updated><id>http://localhost:4000/research/git</id><content type="html" xml:base="http://localhost:4000/research/git/"><![CDATA[<p><br /></p>

<h1 id="기본-사용">기본 사용</h1>
<h2 id="리포지토리-클론">리포지토리 클론</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone &lt;리포지토리 URL&gt;
</code></pre></div></div>

<h2 id="최신-상태로-업데이트">최신 상태로 업데이트</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git pull origin &lt;브렌치 이름&gt;
</code></pre></div></div>

<h2 id="커밋-및-푸시">커밋 및 푸시</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add <span class="nb">.</span>
git commit <span class="nt">-m</span> <span class="s1">'커밋메시지'</span>
git push
</code></pre></div></div>]]></content><author><name>김휘재 Hwijae Kim</name><email>dusan960766@gmail.com</email></author><category term="Research" /><category term="git" /><summary type="html"><![CDATA[기본 사용 리포지토리 클론 git clone &lt;리포지토리 URL&gt;]]></summary></entry><entry><title type="html">웹인터랙션프로그래밍 교과목 프로젝트 [My Origin Wizard]</title><link href="http://localhost:4000/projects/code/web-interaction-final/" rel="alternate" type="text/html" title="웹인터랙션프로그래밍 교과목 프로젝트 [My Origin Wizard]" /><published>2024-11-22T00:00:00+09:00</published><updated>2024-11-22T00:00:00+09:00</updated><id>http://localhost:4000/projects/code/web-interaction-final</id><content type="html" xml:base="http://localhost:4000/projects/code/web-interaction-final/"><![CDATA[<style>
  .ico {
    border-radius: 5px;
    height: 30px;
    margin-bottom: 5px;
  }
</style>

<p><br /></p>
<h1 id="-나의-일대기-9가지-페이지를-javascript-기반의-상호작용-사이트로-제작">📝 나의 일대기 9가지 페이지를 JavaScript 기반의 상호작용 사이트로 제작</h1>

<table>
  <tbody>
    <tr>
      <td><strong>기간</strong></td>
      <td>2024.09 ~ 2024.12 (2-2학기)</td>
    </tr>
    <tr>
      <td><strong>인원</strong></td>
      <td>개인</td>
    </tr>
    <tr>
      <td><strong>담당분야</strong></td>
      <td>사이트 콘셉트 수립, 9개 콘텐츠 기획 및 기능구현</td>
    </tr>
    <tr>
      <td><strong>관련 링크</strong></td>
      <td><a href="https://hwijaekim.github.io/my-origin-wizard/index.html" target="_blank">https://hwijaekim.github.io/my-origin-wizard</a></td>
    </tr>
  </tbody>
</table>

<p><br /><br /></p>

<h1 id="-핵심-기술-요약">🔑 핵심 기술 요약</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">display: flex;</code>, <code class="language-plaintext highlighter-rouge">flex-flow: row wrap;</code> 스타일 적용으로 윈도우 크기변화에 따른 적절한 아이콘 배치</li>
  <li><code class="language-plaintext highlighter-rouge">JQuery UI</code> 사용으로 <code class="language-plaintext highlighter-rouge">index.html</code>에서 윈도우 창 드래그 기능 구현</li>
  <li><code class="language-plaintext highlighter-rouge">forEach</code>를 이용해 <code class="language-plaintext highlighter-rouge">index.html</code>에서 각 아이콘 클릭에 대한 페이지 전환을 자연스럽고 적은 양의 코드로 구현</li>
</ul>

<p><br /><br /></p>
<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/sVCvbcAeFW4?si=-_R6b9hT8Qhtx_MY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
<p><br /><br /></p>

<h1 id="-주요-코드">📌 주요 코드</h1>
<h2 id="flex-아이콘-배치--jquery-ui를-이용한-드래그-구현"><code class="language-plaintext highlighter-rouge">flex</code> 아이콘 배치 + JQuery UI를 이용한 드래그 구현</h2>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">#win_contents</span> <span class="p">{</span>
    <span class="c">/*border: solid 1px red;*/</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">95%</span><span class="p">;</span>
    <span class="nl">height</span><span class="p">:</span> <span class="m">90%</span><span class="p">;</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="nb">auto</span><span class="p">;</span>
    <span class="nl">display</span><span class="p">:</span> <span class="n">flex</span><span class="p">;</span>
    <span class="nl">flex-flow</span><span class="p">:</span> <span class="n">row</span> <span class="n">wrap</span><span class="p">;</span>
    <span class="nl">align-items</span><span class="p">:</span> <span class="nb">baseline</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">$</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#win_container</span><span class="dl">'</span><span class="p">).</span><span class="nx">draggable</span><span class="p">();</span>
<span class="p">})</span>
</code></pre></div></div>
<p><img src="/assets/images/posts_img/web-interaction-final/2-1.webp" alt="2-1" /></p>

<h2 id="foreach로-각-9개의-아이콘을-클릭하여-페이지-전환-구현"><code class="language-plaintext highlighter-rouge">forEach</code>로 각 9개의 아이콘을 클릭하여 페이지 전환 구현</h2>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//index.html에서 각 아이콘 클릭시 화면전환 기능 구현</span>
<span class="kd">const</span> <span class="nx">icons</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="dl">'</span><span class="s1">.iconFlex</span><span class="dl">'</span><span class="p">);</span>  <span class="c1">//총 9개의 iconFlex 클래스를 querySelectorAll 배열로 변수 지정</span>
<span class="kd">const</span> <span class="nx">popupBox</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">popup</span><span class="dl">'</span><span class="p">);</span>  <span class="c1">//아이콘 클릭시 자연스럽게 전환될 수 있도록 popup id 변수 지정</span>

<span class="nx">icons</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">icon</span><span class="p">,</span><span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>  <span class="c1">//iconFlex div를 forEach, 클릭된 icon의 순서를 알기 위해 index를 추가로 선언</span>
    <span class="nx">icon</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>  <span class="c1">//icon을 클릭하면</span>
        <span class="nx">popupBox</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">active</span><span class="dl">'</span><span class="p">);</span>  <span class="c1">//미리 선언해둔 팝업 변수에 active클래스를 추가하여 keyframe애니메이션 재생</span>

        <span class="c1">//핵심 코드. popupBox에 active 클래스가 추가되고 1초 후 내부 코드 실행</span>
        <span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="cm">/*
            * index페이지 전환 코드
            * 각 서브 페이지 이름은 1~9.html로 지정해 두었음
            * forEach에서 선언한 index값은 클릭한 icon의 순서
            * querySelectorAll로 불러온 배열은 0부터 시작하므로 클릭한 index에 1을 더함
            * 최종적으로 백틱을 사용하여 클릭한 icon에 대한 순서(index)값+1.html 파일을 1초 후 열도록 프로그래밍
            * ex. 6번째 아이콘을 클릭 -&gt; index값은 5 -&gt; 5+1 =&gt; 6.html 1초 후 전환
            * */</span>
            <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="s2">`./</span><span class="p">${</span><span class="nx">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">}</span><span class="s2">.html`</span><span class="p">;</span>
        <span class="p">},</span> <span class="mi">1000</span><span class="p">);</span>
    <span class="p">})</span>
<span class="p">})</span>
</code></pre></div></div>
<p><img src="/assets/images/posts_img/web-interaction-final/2-2.webp" alt="2-2" /></p>

<h2 id="svg의-path-내-속성값을-변경해-애니메이션을-구현">SVG의 path 내 속성값을 변경해 애니메이션을 구현</h2>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--SVG 중 일부--&gt;</span>
<span class="nt">&lt;path</span> <span class="na">id=</span><span class="s">"bezier-control"</span> <span class="na">d=</span><span class="s">"M10.5 327C73 251.167 243.3 99.5 424.5 99.5C605.7 99.5 776.667 250.833 839.5 326.5"</span> <span class="na">stroke=</span><span class="s">"#D0D0D0"</span> <span class="na">stroke-width=</span><span class="s">"1.5"</span><span class="nt">/&gt;</span>

<span class="c">&lt;!--버튼--&gt;</span>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"btn-cluster"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">"graph-btn"</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">"./sources/05motion/bezier_1.webp"</span> <span class="na">alt=</span><span class="s">"bezier_1"</span><span class="nt">&gt;&lt;/button&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">"graph-btn"</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">"./sources/05motion/bezier_2.webp"</span> <span class="na">alt=</span><span class="s">"bezier_2"</span><span class="nt">&gt;&lt;/button&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">"graph-btn"</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">"./sources/05motion/bezier_3.webp"</span> <span class="na">alt=</span><span class="s">"bezier_3"</span><span class="nt">&gt;&lt;/button&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">"graph-btn"</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">"./sources/05motion/bezier_4.webp"</span> <span class="na">alt=</span><span class="s">"bezier_4"</span><span class="nt">&gt;&lt;/button&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// svg중 bezier 부분 path, 움직일 원, 버튼 4개를 변수로 선언</span>
<span class="kd">const</span> <span class="nx">bezierControl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">bezier-control</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">ballObj</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">ball</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">bezierBtn</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="dl">'</span><span class="s1">.graph-btn</span><span class="dl">'</span><span class="p">);</span>

<span class="c1">// NodeList로 나열된 bezierBtn을 forEach로 풀어주기</span>
<span class="nx">bezierBtn</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">btn</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">btn</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="c1">// 버튼 순서대로 클릭시 index값을 통해 if문으로 조작</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">index</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="cm">/*
            * 해당 변수 내 요소의 속성값을 변경할 수 있는 메서드.
            * (변수).setAttribute(속성명, 속성값);
            * */</span>
            <span class="nx">bezierControl</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span>
                <span class="c1">// 해당 변수 path 내 포함된 요소 "b"에 대한 속성값을 아래와 같이 변경한다.</span>
                <span class="dl">"</span><span class="s2">d</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">M10.5 327C73 251.167 243.3 99.5 424.5 99.5C605.7 99.5 776.667 250.833 839.5 326.5</span><span class="dl">"</span>
            <span class="p">);</span>
            <span class="c1">// 추가된 모든 클래스를 제거</span>
            <span class="nx">ballObj</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">index</span> <span class="o">===</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">bezierControl</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span>
                <span class="dl">"</span><span class="s2">d</span><span class="dl">"</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">M10.5 327C43.5 327 132 99.5 214.5 99.5C335 99.5 332.5 326.5 839.5 326.5</span><span class="dl">"</span>
            <span class="p">);</span>
            <span class="c1">//추가된 모든 클래스를 제거하고 graph2 클래스를 add</span>
            <span class="nx">ballObj</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
            <span class="nx">ballObj</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">graph2</span><span class="dl">'</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">})</span>
<span class="p">})</span>
</code></pre></div></div>
<p><img src="/assets/images/posts_img/web-interaction-final/2-3.webp" alt="2-2" /></p>

<p><br /><br /></p>

<h1 id="️-사용-기술">🖥️ 사용 기술</h1>
<p><img class="ico" src="https://img.shields.io/badge/HTML5-E34F26?style=for-the-badge&amp;logo=html5&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/CSS3-1572B6?style=for-the-badge&amp;logo=css3&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&amp;logo=JavaScript&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/GitHub-100000?style=for-the-badge&amp;logo=github&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/GIT-E44C30?style=for-the-badge&amp;logo=git&amp;logoColor=white" /></p>

<p><br /><br /></p>

<h1 id="️-총평">⌨️ 총평</h1>
<ul>
  <li>Good Parts
    <ul>
      <li>CSS와 JS를 통합하여 제작했을 때 발생할 수 있는 문제를 경험하고 해결</li>
      <li>HTML/CSS와 JS를 보다 긴밀하게 연결하여 여러 상호작용 요소를 구현</li>
      <li>코드 주석처리에 대한 습관</li>
      <li>SVG와 CSS Animation을 적극 활용</li>
    </ul>
  </li>
  <li>Bad Parts
    <ul>
      <li>구현 가능성과 시간분배로 인한 콘텐츠 타협</li>
    </ul>
  </li>
</ul>]]></content><author><name>김휘재 Hwijae Kim</name><email>dusan960766@gmail.com</email></author><category term="Projects" /><category term="Code" /><category term="front-end" /><category term="html/css/js" /><summary type="html"><![CDATA[📝 나의 일대기 9가지 페이지를 JavaScript 기반의 상호작용 사이트로 제작]]></summary></entry><entry><title type="html">서버프로그래밍 교과목 기말 프로젝트 [유니픽스]</title><link href="http://localhost:4000/projects/code/server-programming-final/" rel="alternate" type="text/html" title="서버프로그래밍 교과목 기말 프로젝트 [유니픽스]" /><published>2024-11-21T00:00:00+09:00</published><updated>2024-11-21T00:00:00+09:00</updated><id>http://localhost:4000/projects/code/server-programming-final</id><content type="html" xml:base="http://localhost:4000/projects/code/server-programming-final/"><![CDATA[<style>
  .ico {
    border-radius: 5px;
    height: 30px;
    margin-bottom: 5px;
  }
</style>

<p><br /></p>
<h1 id="-nodejs와-mongodb를-이용한-컴퓨터-수리-예약-사이트-유니픽스">📝 Node.js와 MongoDB를 이용한 컴퓨터 수리 예약 사이트 [유니픽스]</h1>

<table>
  <tbody>
    <tr>
      <td><strong>기간</strong></td>
      <td>2024.11 ~ 2024.12  (2-2학기)</td>
    </tr>
    <tr>
      <td><strong>인원</strong></td>
      <td>개인</td>
    </tr>
    <tr>
      <td><strong>담당분야</strong></td>
      <td>개발환경 구축, MongoDB 연결, <code class="language-plaintext highlighter-rouge">multer</code>를 이용한 이미지 업로드, 그 외 요소 구현</td>
    </tr>
    <tr>
      <td><strong>관련 링크</strong></td>
      <td><sub>학습 교재</sub><br />고영희 저 Do it! Node.js 프로그래밍 입문<br />쉽고 빠르게 달리는 백엔드 개발 / 자바스크립트+노드제이에스+익스프레스+몽고DB로 개발 순서에 따라 직접 서버 만들기!</td>
    </tr>
  </tbody>
</table>

<p><br /><br /></p>

<h1 id="-핵심-기술-요약">🔑 핵심 기술 요약</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">js, Node.js, express, MongoDB</code>를 이용한 기초 express 서버 제작</li>
  <li><code class="language-plaintext highlighter-rouge">GET, POST, PUT, DELETE</code> 메서드를 요청하고 응답을 처리하는 메서드 구성</li>
  <li>템플릿 엔진으로 <code class="language-plaintext highlighter-rouge">ejs</code> 연결</li>
  <li><code class="language-plaintext highlighter-rouge">jsonwebtoken(JWT), cookie</code>를 이용한 비밀번호 암호화 및 토큰, 쿠키로 어드민 회원가입/로그인 관리</li>
  <li>어드민 계정과 전용 페이지</li>
  <li><code class="language-plaintext highlighter-rouge">multer</code>를 이용한 이미지 업로드</li>
</ul>

<p><br /><br /></p>
<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/lcYLc4jGij4?si=4T4IaI89ezR3GTJH" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
<p><br /><br /></p>

<h1 id="-주요-코드">📌 주요 코드</h1>
<h2 id="npm-패키지">npm 패키지</h2>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">  </span><span class="nl">"dependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"bcrypt"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^5.1.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"cookie-parser"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^1.4.7"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dotenv"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^16.4.5"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"ejs"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^3.1.10"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"express"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^4.21.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"express-async-handler"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^1.2.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"express-ejs-layouts"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^2.5.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"gridfs-stream"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^1.1.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"install"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.13.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"jsonwebtoken"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^9.0.2"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"method-override"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^3.0.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"mongoose"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^8.8.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"multer"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^1.4.5-lts.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"nodemon"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^3.1.7"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"npm"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^10.9.0"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="env-설정"><code class="language-plaintext highlighter-rouge">env</code> 설정</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DB_CONNECT = mongodb+srv://(SECURITY).mongodb.net/unifixData
JWT_SECRET= (SECURITY)
</code></pre></div></div>

<h2 id="appjs-mainjs-adminjs-선언한-모듈"><code class="language-plaintext highlighter-rouge">app.js</code>, <code class="language-plaintext highlighter-rouge">main.js</code>, <code class="language-plaintext highlighter-rouge">admin.js</code> 선언한 모듈</h2>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*====================app.js====================*/</span>
<span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">dotenv</span><span class="dl">'</span><span class="p">).</span><span class="nx">config</span><span class="p">({</span> <span class="na">path</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./path/to/.env</span><span class="dl">'</span> <span class="p">});</span>
<span class="kd">const</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">express</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">expressEjsLayouts</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">express-ejs-layouts</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">connectDb</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">./config/db</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// DB 연결 함수 가져오기</span>
<span class="kd">const</span> <span class="nx">cookieParser</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">cookie-parser</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// 쿠키 파서 가져오기</span>
<span class="kd">const</span> <span class="nx">methodOverride</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">method-override</span><span class="dl">"</span><span class="p">)</span>

<span class="c1">// 이미지 업로드 관련</span>
<span class="kd">const</span> <span class="nx">multer</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">multer</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">Image</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">./models/Article</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">path</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">fs</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">();</span>
<span class="kd">const</span> <span class="nx">port</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">PORT</span> <span class="o">||</span> <span class="mi">3001</span>


<span class="cm">/*====================main.js====================*/</span>
<span class="kd">const</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">express</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">router</span> <span class="o">=</span> <span class="nx">express</span><span class="p">.</span><span class="nx">Router</span><span class="p">();</span>
<span class="kd">const</span> <span class="nx">mainLayout</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">layouts/main</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">Comment</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">../models/News</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">Contact</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">../models/Order</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">Article</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">../models/Article</span><span class="dl">'</span><span class="p">);</span>
<span class="c1">// const Image = require("../models/Images");</span>
<span class="kd">const</span> <span class="nx">asynchandler</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">express-async-handler</span><span class="dl">"</span><span class="p">);</span>


<span class="cm">/*====================amdin.js====================*/</span>
<span class="kd">const</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">express</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">router</span> <span class="o">=</span> <span class="nx">express</span><span class="p">.</span><span class="nx">Router</span><span class="p">();</span>
<span class="kd">const</span> <span class="nx">adminLayout</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">layouts/admin</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">adminLayout2</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">layouts/admin-nologout</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">asyncHandler</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">express-async-handler</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">bcrypt</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">bcrypt</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">User</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">../models/User</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">Comment</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">../models/News</span><span class="dl">"</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">jwt</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">jsonwebtoken</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">JWT_SECRET</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">JWT_SECRET</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="메인mainjs-라우트">메인(<code class="language-plaintext highlighter-rouge">main.js</code>) 라우트</h2>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// GET</span>
<span class="c1">// "/home" 라우트</span>
<span class="nx">router</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span>
  <span class="p">[</span><span class="dl">"</span><span class="s2">/</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">/order</span><span class="dl">"</span><span class="p">],</span>
  <span class="nx">asynchandler</span><span class="p">(</span><span class="k">async</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">contacts</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">Contact</span><span class="p">.</span><span class="nx">find</span><span class="p">();</span>
    <span class="nx">res</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="dl">"</span><span class="s2">order</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span> <span class="na">contacts</span><span class="p">:</span> <span class="nx">contacts</span><span class="p">,</span> <span class="na">layout</span><span class="p">:</span> <span class="nx">mainLayout</span> <span class="p">});</span>  <span class="c1">//미리 설정한 레이아웃 사용</span>
  <span class="p">})</span>
<span class="p">);</span>

<span class="c1">// POST</span>
<span class="nx">router</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span>
        <span class="dl">"</span><span class="s2">/newOrder</span><span class="dl">"</span><span class="p">,</span>
        <span class="nx">asynchandler</span><span class="p">(</span><span class="k">async</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
          <span class="kd">const</span> <span class="p">{</span> <span class="nx">devicename</span><span class="p">,</span> <span class="nx">casewhat</span><span class="p">,</span> <span class="nx">sangtae</span><span class="p">,</span> <span class="nx">name</span><span class="p">,</span> <span class="nx">phone</span><span class="p">,</span> <span class="nx">email</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span>
          <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">devicename</span> <span class="o">||</span> <span class="o">!</span><span class="nx">casewhat</span> <span class="o">||</span> <span class="o">!</span><span class="nx">sangtae</span> <span class="o">||</span> <span class="o">!</span><span class="nx">name</span> <span class="o">||</span> <span class="o">!</span><span class="nx">phone</span> <span class="o">||</span> <span class="o">!</span><span class="nx">email</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">400</span><span class="p">).</span><span class="nx">send</span><span class="p">(</span><span class="dl">'</span><span class="s1">필수값이 입력되지 않았습니다.</span><span class="dl">'</span><span class="p">);</span>
          <span class="p">}</span>
          <span class="kd">const</span> <span class="nx">contact</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">Contact</span><span class="p">.</span><span class="nx">create</span><span class="p">({</span>
            <span class="nx">devicename</span><span class="p">,</span>
            <span class="nx">casewhat</span><span class="p">,</span>
            <span class="nx">sangtae</span><span class="p">,</span>
            <span class="nx">name</span><span class="p">,</span>
            <span class="nx">phone</span><span class="p">,</span>
            <span class="nx">email</span><span class="p">,</span>
          <span class="p">});</span>
          <span class="c1">// res.status(201).send("사용자 데이터 생성됨");</span>
          <span class="nx">res</span><span class="p">.</span><span class="nx">redirect</span><span class="p">(</span><span class="dl">"</span><span class="s2">/order</span><span class="dl">"</span><span class="p">);</span> <span class="c1">//mid add</span>
        <span class="p">})</span>
<span class="p">)</span>

<span class="c1">// PUT</span>
<span class="nx">router</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span>
  <span class="dl">"</span><span class="s2">/order/:id</span><span class="dl">"</span><span class="p">,</span>
  <span class="nx">asynchandler</span><span class="p">(</span><span class="k">async</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">id</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span>
    <span class="kd">const</span> <span class="p">{</span> <span class="nx">devicename</span><span class="p">,</span> <span class="nx">casewhat</span><span class="p">,</span> <span class="nx">sangtae</span><span class="p">,</span> <span class="nx">name</span><span class="p">,</span> <span class="nx">phone</span><span class="p">,</span> <span class="nx">email</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span>
    <span class="kd">const</span> <span class="nx">contact</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">Contact</span><span class="p">.</span><span class="nx">findById</span><span class="p">(</span><span class="nx">id</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">contact</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">404</span><span class="p">);</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="dl">'</span><span class="s1">사용자 데이터 찾을 수 없음</span><span class="dl">'</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="c1">// 수정</span>
    <span class="nx">contact</span><span class="p">.</span><span class="nx">devicename</span> <span class="o">=</span> <span class="nx">devicename</span><span class="p">;</span>
    <span class="nx">contact</span><span class="p">.</span><span class="nx">casewhat</span> <span class="o">=</span> <span class="nx">casewhat</span><span class="p">;</span>
    <span class="nx">contact</span><span class="p">.</span><span class="nx">sangtae</span> <span class="o">=</span> <span class="nx">sangtae</span><span class="p">;</span>
    <span class="nx">contact</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
    <span class="nx">contact</span><span class="p">.</span><span class="nx">email</span> <span class="o">=</span> <span class="nx">email</span><span class="p">;</span>
    <span class="nx">contact</span><span class="p">.</span><span class="nx">phone</span> <span class="o">=</span> <span class="nx">phone</span><span class="p">;</span>
    <span class="c1">// 저장</span>
    <span class="nx">contact</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>
    <span class="c1">//mid add</span>
    <span class="nx">res</span><span class="p">.</span><span class="nx">redirect</span><span class="p">(</span><span class="dl">"</span><span class="s2">/order</span><span class="dl">"</span><span class="p">);</span>
  <span class="p">})</span>
<span class="p">)</span>

<span class="c1">// DELETE</span>
<span class="nx">router</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span>
  <span class="dl">"</span><span class="s2">/delete/:id</span><span class="dl">"</span><span class="p">,</span>
  <span class="nx">asynchandler</span><span class="p">(</span><span class="k">async</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">await</span> <span class="nx">Contact</span><span class="p">.</span><span class="nx">deleteOne</span><span class="p">({</span><span class="na">_id</span><span class="p">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">id</span><span class="p">});</span>
    <span class="nx">res</span><span class="p">.</span><span class="nx">redirect</span><span class="p">(</span><span class="dl">'</span><span class="s1">/order</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">})</span>
<span class="p">);</span>
</code></pre></div></div>
<h2 id="어드민adminjs-인증-토큰">어드민(<code class="language-plaintext highlighter-rouge">admin.js</code>) 인증 토큰</h2>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Check Login</span>
<span class="kd">const</span> <span class="nx">checkLogin</span> <span class="o">=</span> <span class="k">async</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">cookies</span><span class="p">.</span><span class="nx">token</span><span class="p">;</span> <span class="c1">// 쿠키 정보 가져오기</span>

  <span class="c1">// 토큰이 없다면</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">token</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">redirect</span><span class="p">(</span><span class="dl">"</span><span class="s2">/admin</span><span class="dl">"</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="c1">// 토큰이 있다면 토큰을 확인하고 사용자 정보를 요청에 추가</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">decoded</span> <span class="o">=</span> <span class="nx">jwt</span><span class="p">.</span><span class="nx">verify</span><span class="p">(</span><span class="nx">token</span><span class="p">,</span> <span class="nx">JWT_SECRET</span><span class="p">);</span>
    <span class="nx">req</span><span class="p">.</span><span class="nx">userId</span> <span class="o">=</span> <span class="nx">decoded</span><span class="p">.</span><span class="nx">userId</span><span class="p">;</span> <span class="c1">// res.userId가 아닌 req.userId에 저장</span>
    <span class="nx">next</span><span class="p">();</span>
  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">redirect</span><span class="p">(</span><span class="dl">"</span><span class="s2">/admin</span><span class="dl">"</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// POST /admin</span>
<span class="c1">// 관리자 페이지 로그인</span>
<span class="nx">router</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span>
        <span class="dl">"</span><span class="s2">/admin</span><span class="dl">"</span><span class="p">,</span>
        <span class="nx">asyncHandler</span><span class="p">(</span><span class="k">async</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
          <span class="kd">const</span> <span class="p">{</span> <span class="nx">username</span><span class="p">,</span> <span class="nx">password</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span> <span class="c1">// req.body에서 username과 password를 가져옴</span>

          <span class="c1">// 사용자 이름으로 사용자 찾기</span>
          <span class="kd">const</span> <span class="nx">user</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">User</span><span class="p">.</span><span class="nx">findOne</span><span class="p">({</span> <span class="nx">username</span> <span class="p">});</span>

          <span class="c1">// 일치하는 사용자가 없으면 에러 메시지 출력</span>
          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">user</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">401</span><span class="p">).</span><span class="nx">json</span><span class="p">({</span> <span class="na">message</span><span class="p">:</span> <span class="dl">"</span><span class="s2">일치하는 사용자가 없습니다.</span><span class="dl">"</span> <span class="p">});</span>
          <span class="p">}</span>
          <span class="kd">const</span> <span class="nx">isValidPassword</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">bcrypt</span><span class="p">.</span><span class="nx">compare</span><span class="p">(</span><span class="nx">password</span><span class="p">,</span> <span class="nx">user</span><span class="p">.</span><span class="nx">password</span><span class="p">);</span>

          <span class="c1">// 비밀번호가 일치하지 않으면 에러 메시지 출력</span>
          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isValidPassword</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">401</span><span class="p">).</span><span class="nx">json</span><span class="p">({</span> <span class="na">message</span><span class="p">:</span> <span class="dl">"</span><span class="s2">비밀번호가 일치하지 않습니다.</span><span class="dl">"</span> <span class="p">});</span>
          <span class="p">}</span>

          <span class="c1">// JWT 토큰 생성</span>
          <span class="kd">const</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">jwt</span><span class="p">.</span><span class="nx">sign</span><span class="p">({</span> <span class="na">id</span><span class="p">:</span> <span class="nx">user</span><span class="p">.</span><span class="nx">_id</span> <span class="p">},</span> <span class="nx">JWT_SECRET</span><span class="p">);</span>

          <span class="c1">// JWT 토큰을 쿠키에 저장</span>
          <span class="nx">res</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="dl">"</span><span class="s2">token</span><span class="dl">"</span><span class="p">,</span> <span class="nx">token</span><span class="p">,</span> <span class="p">{</span>
            <span class="na">httpOnly</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
          <span class="p">});</span>

          <span class="c1">// 로그인에 성공하면 전체 게시물 목록 페이지로 이동</span>
          <span class="nx">res</span><span class="p">.</span><span class="nx">redirect</span><span class="p">(</span><span class="dl">"</span><span class="s2">/allPosts</span><span class="dl">"</span><span class="p">);</span>
        <span class="p">})</span>
<span class="p">);</span>

<span class="c1">// 회원가입</span>
<span class="nx">router</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">/register</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">res</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="dl">'</span><span class="s1">admin/register</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span><span class="na">layout</span><span class="p">:</span> <span class="nx">adminLayout2</span><span class="p">});</span>
<span class="p">})</span>


<span class="nx">router</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span>
        <span class="dl">'</span><span class="s1">/register</span><span class="dl">'</span><span class="p">,</span>
        <span class="nx">asyncHandler</span><span class="p">(</span><span class="k">async</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
          <span class="kd">const</span> <span class="p">{</span><span class="nx">username</span><span class="p">,</span> <span class="nx">password</span><span class="p">,</span> <span class="nx">password2</span><span class="p">}</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span>
          <span class="k">if</span><span class="p">(</span><span class="nx">password</span> <span class="o">===</span> <span class="nx">password2</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// bcrypt를 사용해 비밀번호를 암호화</span>
            <span class="kd">const</span> <span class="nx">hashedPassword</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">bcrypt</span><span class="p">.</span><span class="nx">hash</span><span class="p">(</span><span class="nx">password</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">hashedPassword</span><span class="p">);</span>
            <span class="c1">// 사용자 이름과 암호화된 비밀번호를 사용해서 새 사용자를 생성</span>
            <span class="kd">const</span> <span class="nx">user</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">User</span><span class="p">.</span><span class="nx">create</span><span class="p">({</span> <span class="nx">username</span><span class="p">,</span> <span class="na">password</span><span class="p">:</span> <span class="nx">hashedPassword</span><span class="p">});</span>
            <span class="c1">// 성공메시지 출력</span>
            <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">201</span><span class="p">).</span><span class="nx">json</span><span class="p">({</span><span class="na">message</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Register successful</span><span class="dl">"</span><span class="p">,</span> <span class="nx">user</span><span class="p">})</span>
          <span class="p">}</span>
          <span class="k">else</span> <span class="p">{</span>
            <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="dl">"</span><span class="s2">Register Failed</span><span class="dl">"</span><span class="p">)</span>
          <span class="p">}</span>
        <span class="p">})</span>
<span class="p">)</span>
</code></pre></div></div>
<p><img src="/assets/images/posts_img/server_programming/token.webp" alt="token" /></p>

<p><br /><br /></p>

<h1 id="️-사용-기술">🖥️ 사용 기술</h1>
<p><img class="ico" src="https://img.shields.io/badge/HTML5-E34F26?style=for-the-badge&amp;logo=html5&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/CSS3-1572B6?style=for-the-badge&amp;logo=css3&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&amp;logo=JavaScript&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/Node.js-43853D?style=for-the-badge&amp;logo=node.js&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/npm-CB3837?style=for-the-badge&amp;logo=npm&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/MongoDB-4EA94B?style=for-the-badge&amp;logo=mongodb&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/ejs-%23B4CA65.svg?style=for-the-badge&amp;logo=ejs&amp;logoColor=black" />
<img class="ico" src="https://img.shields.io/badge/express.js-%23404d59.svg?style=for-the-badge&amp;logo=express&amp;logoColor=%2361DAFB" />
<img class="ico" src="https://img.shields.io/badge/NODEMON-%23323330.svg?style=for-the-badge&amp;logo=nodemon&amp;logoColor=%BBDEAD" />
<img class="ico" src="https://img.shields.io/badge/JWT-black?style=for-the-badge&amp;logo=JSON%20web%20tokens" /></p>

<p><br /><br /></p>

<h1 id="️-총평">⌨️ 총평</h1>
<ul>
  <li><strong>Good Parts</strong>
    <ul>
      <li>기본적인 라우트 프로세스를 숙지</li>
      <li><code class="language-plaintext highlighter-rouge">GET</code>, <code class="language-plaintext highlighter-rouge">POST</code>, <code class="language-plaintext highlighter-rouge">PUT</code>, <code class="language-plaintext highlighter-rouge">DELETE</code> 메서드를 요청, ejs템플릿엔진으로 렌더링</li>
      <li>스키마를 생성하고 MongoDB 데이터베이스와 연동 및 불러오기</li>
      <li><code class="language-plaintext highlighter-rouge">multer</code>를 이용한 이미지 업로드</li>
      <li>백엔드 프로세스에 대한 일부 기초적인 이해</li>
    </ul>
  </li>
  <li><strong>Bad Parts</strong>
    <ul>
      <li>사이트 메인 로그인 구현 부재</li>
      <li>처음 접하는 백엔드 프로세스로 다소 미흡함 존재</li>
      <li>일부 프로세스에 대한 이해 부족으로 완전히 소화하지 못 함</li>
    </ul>
  </li>
</ul>]]></content><author><name>김휘재 Hwijae Kim</name><email>dusan960766@gmail.com</email></author><category term="Projects" /><category term="Code" /><category term="back-end" /><category term="node.js" /><category term="mongodb" /><category term="npm" /><summary type="html"><![CDATA[📝 Node.js와 MongoDB를 이용한 컴퓨터 수리 예약 사이트 [유니픽스]]]></summary></entry><entry><title type="html">서버프로그래밍 교과목 실습응용 [블로그 express 서버]</title><link href="http://localhost:4000/projects/code/union-server-programming/" rel="alternate" type="text/html" title="서버프로그래밍 교과목 실습응용 [블로그 express 서버]" /><published>2024-11-20T00:00:00+09:00</published><updated>2024-11-20T00:00:00+09:00</updated><id>http://localhost:4000/projects/code/union-server-programming</id><content type="html" xml:base="http://localhost:4000/projects/code/union-server-programming/"><![CDATA[<style>
  .ico {
    border-radius: 5px;
    height: 30px;
    margin-bottom: 5px;
  }
</style>

<p><br /></p>
<h1 id="-mongodb를-이용한-이미지-업로드를-지원하는-블로그-express-서버">📝 MongoDB를 이용한 이미지 업로드를 지원하는 블로그 express 서버</h1>

<table>
  <tbody>
    <tr>
      <td><strong>기간</strong></td>
      <td>2024.11 ~ 2024.12  (2-2학기)</td>
    </tr>
    <tr>
      <td><strong>인원</strong></td>
      <td>개인</td>
    </tr>
    <tr>
      <td><strong>담당분야</strong></td>
      <td>개발환경 구축, MongoDB 연결, <code class="language-plaintext highlighter-rouge">multer</code>를 이용한 이미지 업로드, 그 외 일부 <code class="language-plaintext highlighter-rouge">html, css</code>를 제외한 요소 구현</td>
    </tr>
    <tr>
      <td><strong>관련 링크</strong></td>
      <td><sub>학습 교재</sub><br />고영희 저 Do it! Node.js 프로그래밍 입문<br />쉽고 빠르게 달리는 백엔드 개발 / 자바스크립트+노드제이에스+익스프레스+몽고DB로 개발 순서에 따라 직접 서버 만들기!</td>
    </tr>
  </tbody>
</table>

<p><br /><br /></p>

<h1 id="-핵심-기술-요약">🔑 핵심 기술 요약</h1>
<ul>
  <li><code class="language-plaintext highlighter-rouge">js, Node.js, express, MongoDB</code>를 이용한 기초 express 서버 제작</li>
  <li><code class="language-plaintext highlighter-rouge">GET, POST, PUT, DELETE</code> 메서드를 요청하고 처리</li>
  <li>요청/응답을 처리하는 미들웨어 구성</li>
  <li>템플릿 엔진으로 <code class="language-plaintext highlighter-rouge">ejs</code> 연결</li>
  <li><code class="language-plaintext highlighter-rouge">jsonwebtoken(JWT), cookie</code>를 이용한 비밀번호 암호화 및 토큰, 쿠키로 어드민 회원가입/로그인 관리</li>
  <li><code class="language-plaintext highlighter-rouge">multer</code>를 이용한 이미지 업로드</li>
</ul>

<p><br /><br /></p>
<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/0P2YOqhIdNU?si=8fWrtM4jE-sBGi4U" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
<p><br /><br /></p>

<h1 id="-주요-코드">📌 주요 코드</h1>
<h2 id="디렉토리-구조">디렉토리 구조</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>├── app.js
├── config
│   └── db.js
├── models
│   ├── Images.js
│   ├── Post.js
│   └── User.js
├── package-lock.json
├── package.json
├── public
│   ├── css
│   │   └── style.css
│   ├── img
│   │   ├── 000446340005_2.jpg
│   │   ├── 1.webp
│   │   ├── banner.jpg
│   │   └── logo.svg
│   └── scripts
├── routes
│   ├── admin.js
│   ├── main.js
├── uploads
└── views
    ├── about.ejs
    ├── addImage.ejs
    ├── admin
    │   ├── add.ejs
    │   ├── allPosts.ejs
    │   ├── edit.ejs
    │   └── index.ejs
    ├── index.ejs
    ├── layouts
    │   ├── admin-nologout.ejs
    │   ├── admin.ejs
    │   └── main.ejs
    └── post.ejs
</code></pre></div></div>

<h2 id="npm-패키지">npm 패키지</h2>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">  </span><span class="nl">"dependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"bcrypt"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^5.1.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"cookie-parser"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^1.4.7"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dotenv"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^16.4.5"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"ejs"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^3.1.10"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"express"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^4.21.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"express-async-handler"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^1.2.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"express-ejs-layouts"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^2.5.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"gridfs-stream"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^1.1.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"install"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.13.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"jsonwebtoken"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^9.0.2"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"method-override"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^3.0.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"mongoose"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^8.8.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"multer"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^1.4.5-lts.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"nodemon"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^3.1.7"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"npm"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^10.9.0"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="env-설정">env 설정</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DB_CONNECT = mongodb+srv://(SECURITY).mongodb.net/myBlog
JWT_SECRET= (SECURITY)
</code></pre></div></div>

<h2 id="mainejs">main.ejs</h2>
<p><em>메인 레이아웃을 지정</em></p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"ko"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"X-UA-Compatible"</span> <span class="na">content=</span><span class="s">"IE=edge"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;title&gt;&lt;</span><span class="err">%=</span> <span class="na">locals.title</span> <span class="err">%</span><span class="nt">&gt;&lt;/title&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"description"</span> <span class="na">content=</span><span class="s">"My first application using Node.js, Express and MongoDB"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"/css/style.css"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span class="nt">&gt;</span>

    <span class="c">&lt;!-- 헤더 : 로고, 상단 메뉴, 로그인 --&gt;</span>
    <span class="nt">&lt;header</span> <span class="na">class=</span><span class="s">"header"</span><span class="nt">&gt;</span>
        <span class="c">&lt;!-- 로고 --&gt;</span>
        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/"</span> <span class="na">class=</span><span class="s">"header-logo"</span><span class="nt">&gt;</span>{ Geek Code }<span class="nt">&lt;/a&gt;</span>

        <span class="c">&lt;!-- 상단 메뉴 --&gt;</span>
        <span class="nt">&lt;nav</span> <span class="na">class=</span><span class="s">"header-nav"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;ul&gt;</span>
                <span class="nt">&lt;li&gt;</span>
                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/home"</span><span class="nt">&gt;</span>{ Home }<span class="nt">&lt;/a&gt;</span>
                <span class="nt">&lt;/li&gt;</span>
                <span class="nt">&lt;li&gt;</span>
                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/about"</span><span class="nt">&gt;</span>{ About }<span class="nt">&lt;/a&gt;</span>
                <span class="nt">&lt;/li&gt;</span>
                <span class="nt">&lt;li&gt;</span>
                    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/upload"</span><span class="nt">&gt;</span>{ Upload }<span class="nt">&lt;/a&gt;</span>
                <span class="nt">&lt;/li&gt;</span>
            <span class="nt">&lt;/ul&gt;</span>
        <span class="nt">&lt;/nav&gt;</span>

        <span class="c">&lt;!-- 관리자 로그인 --&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"header-button"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/admin"</span><span class="nt">&gt;</span>관리자 로그인<span class="nt">&lt;/a&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/header&gt;</span>

    <span class="c">&lt;!-- 메인 : 실제 내용이 들어갈 부분 --&gt;</span>
    <span class="nt">&lt;main</span> <span class="na">class=</span><span class="s">"main"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;</span><span class="err">%</span><span class="na">-</span> <span class="na">body</span> <span class="err">%</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/main&gt;</span>
<span class="nt">&lt;/div&gt;</span>

<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<h2 id="appjs-mainjs에-선언한-모듈">app.js, main.js에 선언한 모듈</h2>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*==========app.js==========*/</span>
<span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">dotenv</span><span class="dl">'</span><span class="p">).</span><span class="nx">config</span><span class="p">({</span> <span class="na">path</span><span class="p">:</span> <span class="dl">'</span><span class="s1">./path/to/.env</span><span class="dl">'</span> <span class="p">});</span>
<span class="kd">const</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">express</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">expressEjsLayouts</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">express-ejs-layouts</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">connectDb</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">./config/db</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// DB 연결 함수 가져오기</span>
<span class="kd">const</span> <span class="nx">cookieParser</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">cookie-parser</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// 쿠키 파서 가져오기</span>
<span class="kd">const</span> <span class="nx">methodOverride</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">method-override</span><span class="dl">"</span><span class="p">)</span>

<span class="c1">// 이미지 업로드 관련</span>
<span class="kd">const</span> <span class="nx">multer</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">multer</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">Image</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">./models/Images</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">path</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">fs</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">();</span>
<span class="kd">const</span> <span class="nx">port</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">PORT</span> <span class="o">||</span> <span class="mi">3001</span> <span class="c1">// .env에 포트가 없으면 3001번 포트로 설정</span>



<span class="cm">/*==========main.js==========*/</span>
<span class="kd">const</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">express</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">router</span> <span class="o">=</span> <span class="nx">express</span><span class="p">.</span><span class="nx">Router</span><span class="p">();</span>
<span class="kd">const</span> <span class="nx">mainLayout</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">layouts/main</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">Post</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">../models/Post</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">asynchandler</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">express-async-handler</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>

<h2 id="routesmainjs-홈-라우트">routes/main.js » 홈 라우트</h2>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// "/home" 라우트</span>
<span class="nx">router</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span>
  <span class="p">[</span><span class="dl">"</span><span class="s2">/</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">/home</span><span class="dl">"</span><span class="p">],</span>  <span class="c1">//루트경로와 /home 경로에서 GET 요청 발생시 동작</span>
  <span class="nx">asynchandler</span><span class="p">(</span><span class="k">async</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>  <span class="c1">//비동기 처리</span>
    <span class="kd">const</span> <span class="nx">locals</span> <span class="o">=</span> <span class="p">{</span>  <span class="c1">//title은 각 ejs의 타이틀명을 설정</span>
      <span class="na">title</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Home</span><span class="dl">"</span><span class="p">,</span>
    <span class="p">};</span>
      <span class="cm">/**
       * MongoDB에서 데이터 조회 후 정렬.
       * 이때 .sort를 이용하여 최신순으로 재졍렬
       */</span>
    <span class="kd">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">Post</span><span class="p">.</span><span class="nx">find</span><span class="p">().</span><span class="nx">sort</span><span class="p">({</span> <span class="na">updatedAt</span><span class="p">:</span> <span class="dl">"</span><span class="s2">desc</span><span class="dl">"</span><span class="p">,</span> <span class="na">createdAt</span><span class="p">:</span> <span class="dl">"</span><span class="s2">desc</span><span class="dl">"</span> <span class="p">});</span>

      <span class="cm">/**
       * mainLayout을 레이아웃 템플릿으로 사용.
       * const mainLayout = "layouts/main";
       */</span>
    <span class="nx">res</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="dl">"</span><span class="s2">index</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span> <span class="nx">locals</span><span class="p">,</span> <span class="nx">data</span><span class="p">,</span> <span class="na">layout</span><span class="p">:</span> <span class="nx">mainLayout</span> <span class="p">});</span>
  <span class="p">})</span>
<span class="p">);</span>
</code></pre></div></div>

<p><br /><br /></p>

<h1 id="️-사용-기술">🖥️ 사용 기술</h1>
<p><img class="ico" src="https://img.shields.io/badge/HTML5-E34F26?style=for-the-badge&amp;logo=html5&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/CSS3-1572B6?style=for-the-badge&amp;logo=css3&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&amp;logo=JavaScript&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/Node.js-43853D?style=for-the-badge&amp;logo=node.js&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/npm-CB3837?style=for-the-badge&amp;logo=npm&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/MongoDB-4EA94B?style=for-the-badge&amp;logo=mongodb&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/ejs-%23B4CA65.svg?style=for-the-badge&amp;logo=ejs&amp;logoColor=black" />
<img class="ico" src="https://img.shields.io/badge/express.js-%23404d59.svg?style=for-the-badge&amp;logo=express&amp;logoColor=%2361DAFB" />
<img class="ico" src="https://img.shields.io/badge/NODEMON-%23323330.svg?style=for-the-badge&amp;logo=nodemon&amp;logoColor=%BBDEAD" />
<img class="ico" src="https://img.shields.io/badge/JWT-black?style=for-the-badge&amp;logo=JSON%20web%20tokens" /></p>

<p><br /><br /></p>

<h1 id="️-총평">⌨️ 총평</h1>
<ul>
  <li><strong>Good Parts</strong>
    <ul>
      <li>최초로 시도한 백엔드 프로세스</li>
      <li>Node.js와 npm 그리고 express서버 구축에 대한 기초를 경험</li>
    </ul>
  </li>
  <li><strong>Bad Parts</strong>
    <ul>
      <li>처음 경험하는 다소 높은 난이도의 백엔드 구축으로 완전히 본인의 것으로 소화하지 못 하여 지속적인 학습 필요</li>
      <li>능동적으로 코드를 이해하고 작성하는 것에 다소 미흡함이 존재</li>
    </ul>
  </li>
</ul>]]></content><author><name>김휘재 Hwijae Kim</name><email>dusan960766@gmail.com</email></author><category term="Projects" /><category term="Code" /><category term="back-end" /><category term="node.js" /><category term="mongodb" /><category term="npm" /><summary type="html"><![CDATA[📝 MongoDB를 이용한 이미지 업로드를 지원하는 블로그 express 서버]]></summary></entry><entry><title type="html">계원예술대학교 디지털미디어디자인과 졸업작품 학과우수작[잇토피아]</title><link href="http://localhost:4000/projects/code/eatopia/" rel="alternate" type="text/html" title="계원예술대학교 디지털미디어디자인과 졸업작품 학과우수작[잇토피아]" /><published>2024-11-11T00:00:00+09:00</published><updated>2024-11-11T00:00:00+09:00</updated><id>http://localhost:4000/projects/code/eatopia</id><content type="html" xml:base="http://localhost:4000/projects/code/eatopia/"><![CDATA[<style>
  .ico {
    border-radius: 5px;
    height: 30px;
    margin-bottom: 5px;
  }
</style>

<p><br /></p>
<h1 id="-유아기-아이들의-식습관-문제-개선을-위한-xr글래스-콘텐츠">📝 유아기 아이들의 식습관 문제 개선을 위한 XR글래스 콘텐츠</h1>

<table>
  <tbody>
    <tr>
      <td><strong>기간</strong></td>
      <td>2024.09 ~ 2024.11  (2-2학기)</td>
    </tr>
    <tr>
      <td><strong>인원</strong></td>
      <td>기획2, 디자인3, <strong>개발1</strong></td>
    </tr>
    <tr>
      <td><strong>담당분야</strong></td>
      <td>서비스 영상 촬영 및 웹 사이트 구현</td>
    </tr>
    <tr>
      <td><strong>관련 링크</strong></td>
      <td><a href="https://hwijaekim.github.io/eatopia2024" target="_blank">https://hwijaekim.github.io/eatopia2024</a></td>
    </tr>
  </tbody>
</table>

<p><br /><br /></p>

<h1 id="-핵심-기술-요약">🔑 핵심 기술 요약</h1>
<ul>
  <li>웹 표준을 준수한 시멘틱 태그 사용</li>
  <li><code class="language-plaintext highlighter-rouge">Vanilla JavaScript</code>에 기반한 <code class="language-plaintext highlighter-rouge">Observer</code> 적극 활용으로 스크롤 시 <code class="language-plaintext highlighter-rouge">keyframe</code>애니메이션 구현</li>
  <li>CSS 가상클래스 사용으로 글꼴 크기, 색상 등을 공통으로 관리</li>
  <li>CSS Step Animation 사용</li>
  <li><code class="language-plaintext highlighter-rouge">svg</code>, <code class="language-plaintext highlighter-rouge">webp</code> 확장자 사용</li>
  <li>Git을 이용한 GitHub 리포지토리를 Clone, 버전관리</li>
</ul>

<p><br /><br /></p>

<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/GXoRwVcUX-Q?si=eMEHC841TNv-l3lc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>

<p><br /><br /></p>

<h1 id="-주요-코드">📌 주요 코드</h1>
<h2 id="가상-클래스">가상 클래스</h2>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">:root</span> <span class="p">{</span>
    <span class="c">/*공통수치 통합관리*/</span>
    <span class="py">--union-line-height</span><span class="p">:</span> <span class="m">1.35</span><span class="p">;</span>

    <span class="c">/*컬러 관리*/</span>
    <span class="py">--background</span><span class="p">:</span> <span class="m">#000000</span><span class="p">;</span>
    <span class="py">--systemColor</span><span class="p">:</span> <span class="m">#ffffff</span><span class="p">;</span>
    <span class="py">--systemColorD</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0.85</span><span class="p">);</span>
    <span class="py">--systemColorLD</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">.6</span><span class="p">);</span>
    <span class="py">--sectorTitleColor</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="m">255</span><span class="p">,</span> <span class="m">255</span><span class="p">,</span> <span class="m">255</span><span class="p">,</span> <span class="m">0.8</span><span class="p">);</span>
    <span class="py">--pinkL</span><span class="p">:</span> <span class="m">#F4AFDD</span><span class="p">;</span>
    <span class="py">--pinkD</span><span class="p">:</span> <span class="m">#CF8AB8</span><span class="p">;</span>
    <span class="py">--pinkUD</span><span class="p">:</span> <span class="m">#B06E9A</span><span class="p">;</span>
    <span class="py">--yellowL</span><span class="p">:</span> <span class="m">#F7DC75</span><span class="p">;</span>
    <span class="py">--yellowD</span><span class="p">:</span> <span class="m">#D3BA59</span><span class="p">;</span>
    <span class="py">--yellowUD</span><span class="p">:</span> <span class="m">#C29D13</span><span class="p">;</span>
    <span class="py">--blueL</span><span class="p">:</span> <span class="m">#BCD1EB</span><span class="p">;</span>
    <span class="py">--blueD</span><span class="p">:</span> <span class="m">#98B1D1</span><span class="p">;</span>
    <span class="py">--blueUD</span><span class="p">:</span> <span class="m">#7A96B8</span><span class="p">;</span>
    <span class="py">--greenL</span><span class="p">:</span> <span class="m">#9EB366</span><span class="p">;</span>
    <span class="py">--greenD</span><span class="p">:</span> <span class="m">#829945</span><span class="p">;</span>
    <span class="py">--greenUD</span><span class="p">:</span> <span class="m">#6E8630</span><span class="p">;</span>
    <span class="py">--ivory</span><span class="p">:</span> <span class="m">#EDE7D9</span><span class="p">;</span>

<span class="c">/*    글꼴크기 관리*/</span>
    <span class="py">--text-xlarge</span><span class="p">:</span> <span class="m">3vw</span><span class="p">;</span>
    <span class="py">--text-large</span><span class="p">:</span> <span class="m">2.3vw</span><span class="p">;</span>
    <span class="py">--text-medium</span><span class="p">:</span> <span class="m">1.6vw</span><span class="p">;</span>
    <span class="py">--text-regular</span><span class="p">:</span> <span class="m">1.3vw</span><span class="p">;</span>
    <span class="py">--text-semi-medium</span><span class="p">:</span> <span class="m">1.5vw</span><span class="p">;</span>
    <span class="py">--text-small</span><span class="p">:</span> <span class="m">1vw</span><span class="p">;</span>
    <span class="py">--text-extra-small</span><span class="p">:</span> <span class="m">0.75vw</span><span class="p">;</span>
   
<span class="p">}</span>
</code></pre></div></div>
<h2 id="step-animation">Step Animation</h2>
<p><img src="/assets/images/posts_img/eatopia/eatopia_stepAni.gif" alt="1" />
<img src="/assets/images/posts_img/eatopia/bibi_hello_step.webp" alt="2" /></p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.stepAni</span> <span class="p">{</span>
    <span class="c">/* border: solid 1px red; */</span>
    <span class="nl">display</span><span class="p">:</span> <span class="n">inline-block</span><span class="p">;</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">8vw</span><span class="p">;</span>
    <span class="py">aspect-ratio</span><span class="p">:</span> <span class="m">1</span> <span class="p">/</span> <span class="m">1</span><span class="p">;</span>
    <span class="nl">background-image</span><span class="p">:</span> <span class="sx">url("../sources/stepAni/maru_fork_step.webp")</span><span class="p">;</span>
    <span class="nl">background-size</span><span class="p">:</span> <span class="n">cover</span><span class="p">;</span>
    <span class="nl">transform</span><span class="p">:</span> <span class="n">translate</span><span class="p">(</span><span class="m">-8vw</span><span class="p">,</span> <span class="m">-3vh</span><span class="p">);</span>
    <span class="nl">animation</span><span class="p">:</span> <span class="n">stepAni</span> <span class="m">1s</span> <span class="n">steps</span><span class="p">(</span><span class="m">10</span><span class="p">)</span> <span class="n">infinite</span> <span class="n">alternate</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">@keyframes</span> <span class="n">stepAni</span> <span class="p">{</span>
    <span class="err">100</span><span class="o">%</span> <span class="p">{</span> <span class="nl">background-position</span><span class="p">:</span> <span class="n">calc</span><span class="p">(</span><span class="m">8vw</span> <span class="err">*</span> <span class="m">10</span><span class="p">)</span> <span class="m">0</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /><br /></p>

<h1 id="️-사용-기술">🖥️ 사용 기술</h1>
<p><img class="ico" src="https://img.shields.io/badge/HTML5-E34F26?style=for-the-badge&amp;logo=html5&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/CSS3-1572B6?style=for-the-badge&amp;logo=css3&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&amp;logo=JavaScript&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/WebStorm-000000?style=for-the-badge&amp;logo=WebStorm&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/GIT-E44C30?style=for-the-badge&amp;logo=git&amp;logoColor=white" />
<img class="ico" src="https://img.shields.io/badge/GitHub-100000?style=for-the-badge&amp;logo=github&amp;logoColor=white" />
<br /><br />
<img class="ico" src="https://img.shields.io/badge/Figma-F24E1E?style=for-the-badge&amp;logo=figma&amp;logoColor=white" /></p>

<p><br /><br /></p>

<h1 id="️-총평">⌨️ 총평</h1>
<ul>
  <li><strong>Good Parts</strong>
    <ul>
      <li>프로젝트 시작 단계부터 웹 표준을 준수한 시멘틱 태그 사용</li>
      <li>본격적으로 디자이너와 협업하여 제작한 팀 프로젝트</li>
      <li>Git 버전관리를 처음으로 사용해본 프로젝트로 GitHub에 더 빠르게 commit</li>
      <li>CSS 가상클래스 사용으로 공통요소를 관리하여 정리 및 유지보수에 이바지</li>
      <li><code class="language-plaintext highlighter-rouge">jpg</code>, <code class="language-plaintext highlighter-rouge">gif</code> 사용을 줄이고 <code class="language-plaintext highlighter-rouge">webp</code> 사용을 지향하여 웹 사이트 경량화</li>
      <li><code class="language-plaintext highlighter-rouge">svg</code>사용으로 벡터 기반의 이미지를 삽입, <code class="language-plaintext highlighter-rouge">svg animation</code>을 이용한 시각적 재미요소 삽입</li>
    </ul>
  </li>
  <li><strong>Bad Parts</strong>
    <ul>
      <li>촉박한 프로젝트 진행 시간으로 인해 일부 섹션에서 통 이미지로 삽입하였음</li>
      <li>일부 영역에<code class="language-plaintext highlighter-rouge">inline style</code> 사용으로 우선순위에 충돌이 생기고 유지보수가 힘들어짐
        <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nt">div</span> <span class="nt">style</span><span class="o">=</span><span class="s1">"transform: translate(.7vw, 5vw);"</span> <span class="nt">class</span><span class="o">=</span><span class="s1">"stepAni2_inline"</span><span class="o">&gt;&lt;/</span><span class="nt">div</span><span class="o">&gt;</span>
</code></pre></div>        </div>
      </li>
      <li><code class="language-plaintext highlighter-rouge">HTML</code>에서 <code class="language-plaintext highlighter-rouge">depth</code>가 많아짐
        <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;body&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"wrap"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;main&gt;</span>
    <span class="c">&lt;!-- SECTOR 03 --&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"sec3_bg"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;section</span> <span class="na">id=</span><span class="s">"sector3"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;article</span> <span class="na">id=</span><span class="s">"summary"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"summary_flexbox sec3_Observer"</span><span class="nt">&gt;</span>
              <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"textFlex"</span><span class="nt">&gt;</span>
                  <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"sub"</span><span class="nt">&gt;&lt;small&gt;</span>그렇다면,<span class="nt">&lt;/small&gt;&lt;/p&gt;</span>
                  <span class="nt">&lt;p&gt;</span>
                      <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"pink bold"</span><span class="nt">&gt;</span>아이의 잘못된 식습관은<span class="nt">&lt;/span&gt;&lt;br&gt;</span> 부모에게 어떤 영향을 줄까요?
                  <span class="nt">&lt;/p&gt;</span>
              <span class="nt">&lt;/div&gt;</span>
              <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"imgFlex"</span><span class="nt">&gt;</span>
                  <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"./sources/background_1.png"</span> <span class="na">alt=</span><span class="s">""</span><span class="nt">&gt;</span>
              <span class="nt">&lt;/div&gt;</span>
            <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;/article&gt;</span>
      <span class="nt">&lt;/section&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/main&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/body&gt;</span>
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>김휘재 Hwijae Kim</name><email>dusan960766@gmail.com</email></author><category term="Projects" /><category term="Code" /><category term="front-end" /><category term="html/css/js" /><category term="figma" /><category term="졸업작품" /><summary type="html"><![CDATA[📝 유아기 아이들의 식습관 문제 개선을 위한 XR글래스 콘텐츠]]></summary></entry><entry><title type="html">Markdown에서 표 만들기</title><link href="http://localhost:4000/research/markdown-table/" rel="alternate" type="text/html" title="Markdown에서 표 만들기" /><published>2024-10-05T00:00:00+09:00</published><updated>2024-10-05T00:00:00+09:00</updated><id>http://localhost:4000/research/markdown-table</id><content type="html" xml:base="http://localhost:4000/research/markdown-table/"><![CDATA[<table>
  <thead>
    <tr>
      <th style="text-align: left">제목</th>
      <th style="text-align: right">내용</th>
      <th style="text-align: center">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">테스트1</td>
      <td style="text-align: right">동해물과백두산이마르고닳도록</td>
      <td style="text-align: center">테스트3</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: left">First Header</th>
      <th style="text-align: center">Second Header</th>
      <th style="text-align: right">Third Header</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">First row</td>
      <td style="text-align: center">Data</td>
      <td style="text-align: right">Very long data entry</td>
    </tr>
    <tr>
      <td style="text-align: left">Second row</td>
      <td style="text-align: center"><strong>Cell</strong></td>
      <td style="text-align: right"><em>Cell</em></td>
    </tr>
    <tr>
      <td style="text-align: left">Third row</td>
      <td style="text-align: center">Cell that spans across two columns</td>
      <td style="text-align: right"> </td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<table>
  <thead>
    <tr>
      <th>날짜</th>
      <th>내용</th>
      <th>기관/결과</th>
      <th>기여</th>
      <th>구분</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2025.02</td>
      <td>계원예술대학교 디지털미디어디자인과 전문학사</td>
      <td>졸업 예정</td>
      <td> </td>
      <td>학력</td>
    </tr>
    <tr>
      <td>2024.07</td>
      <td>계원예술대학교 디지털미디어디자인과 2024-2학기 수석</td>
      <td>계원예술대학교</td>
      <td> </td>
      <td>학력</td>
    </tr>
    <tr>
      <td>2024.07</td>
      <td>제 30회 커뮤니케이션디자인국제공모전 (3인)</td>
      <td>한국커뮤니케이션디자인협회 / 동상</td>
      <td>팀장/웹 개발</td>
      <td>수상</td>
    </tr>
    <tr>
      <td>2024.06</td>
      <td>계원예술대학교 디지털미디어디자인과 우수작 프레젠테이션 1과목 출품</td>
      <td>(과목)유니티프로그래밍</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>2023.12</td>
      <td>계원예술대학교 디지털미디어디자인과 우수작 프레젠테이션 3과목 출품</td>
      <td>(과목)콘텐츠디자인, 모션그래픽스, 웹퍼블리싱</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>2021-2023</td>
      <td>2021-1학기, 2023-2학기, 2024-1학기 성적우수 장학생</td>
      <td>계원예술대학교</td>
      <td> </td>
      <td>학력</td>
    </tr>
    <tr>
      <td>2021.03</td>
      <td>계원예술대학교 디지털미디어디자인과 전문학사</td>
      <td>입학</td>
      <td> </td>
      <td>학력</td>
    </tr>
    <tr>
      <td>2019.09.27</td>
      <td>컴퓨터그래픽스운용기능사</td>
      <td>한국산업인력공단</td>
      <td> </td>
      <td>자격/면혀</td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<table>
  <thead>
    <tr>
      <th>날짜</th>
      <th>내용</th>
      <th>기관/결과</th>
      <th>기여</th>
      <th>구분</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2021.09 - 2023.03</td>
      <td>입시학원 온라인 비디오 콘테늧 제작</td>
      <td>졸업 예정</td>
      <td>촬</td>
      <td>학력</td>
    </tr>
    <tr>
      <td>2024.07</td>
      <td>계원예술대학교 디지털미디어디자인과 2024-2학기 수석</td>
      <td>계원예술대학교</td>
      <td> </td>
      <td>학력</td>
    </tr>
    <tr>
      <td>2024.07</td>
      <td>제 30회 커뮤니케이션디자인국제공모전 (3인)</td>
      <td>한국커뮤니케이션디자인협회 / 동상</td>
      <td>팀장/웹 개발</td>
      <td>수상</td>
    </tr>
    <tr>
      <td>2024.06</td>
      <td>계원예술대학교 디지털미디어디자인과 우수작 프레젠테이션 1과목 출품</td>
      <td>(과목)유니티프로그래밍</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>2023.12</td>
      <td>계원예술대학교 디지털미디어디자인과 우수작 프레젠테이션 3과목 출품</td>
      <td>(과목)콘텐츠디자인, 모션그래픽스, 웹퍼블리싱</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>2021-2023</td>
      <td>2021-1학기, 2023-2학기, 2024-1학기 성적우수 장학생</td>
      <td>계원예술대학교</td>
      <td> </td>
      <td>학력</td>
    </tr>
    <tr>
      <td>2021.03</td>
      <td>계원예술대학교 디지털미디어디자인과 전문학사</td>
      <td>입학</td>
      <td> </td>
      <td>학력</td>
    </tr>
    <tr>
      <td>2019.09.27</td>
      <td>컴퓨터그래픽스운용기능사</td>
      <td>한국산업인력공단</td>
      <td> </td>
      <td>자격/면혀</td>
    </tr>
  </tbody>
</table>]]></content><author><name>김휘재 Hwijae Kim</name><email>dusan960766@gmail.com</email></author><category term="Research" /><category term="markdown" /><category term="table" /><summary type="html"><![CDATA[제목 내용 설명 테스트1 동해물과백두산이마르고닳도록 테스트3]]></summary></entry><entry><title type="html">Apple Silicon에서의 Jekyll 오류 발생 해결</title><link href="http://localhost:4000/research/apple-silicon-jekyll-error/" rel="alternate" type="text/html" title="Apple Silicon에서의 Jekyll 오류 발생 해결" /><published>2024-10-01T00:00:00+09:00</published><updated>2024-10-01T00:00:00+09:00</updated><id>http://localhost:4000/research/apple-silicon-jekyll-error</id><content type="html" xml:base="http://localhost:4000/research/apple-silicon-jekyll-error/"><![CDATA[<h1 id="chat-gpt">Chat GPT</h1>

<p><sub><em>프롬프트</em></sub></p>
<blockquote>
  <p><sub>macOS 터미널을 이용해서 jekyll bundle을 설치하고 있는데 eventmachine 1.2.7 설치 도중 오류가 난대. 왜 이럴까?</sub> <br />
<sub>-2024.09.30</sub></p>
</blockquote>

<p><strong>1. Xcode Command Line Tools 재설치</strong>
이미 명령줄 도구를 설치했더라도 일부 구성 요소가 손상되었을 수 있으니, 다시 설치하거나 업데이트를 시도해 보세요.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo rm</span> <span class="nt">-rf</span> /Library/Developer/CommandLineTools
xcode-select <span class="nt">--install</span>
</code></pre></div></div>

<p><strong>2. g++와 clang 설치 확인 및 설정</strong>
macOS에서는 기본적으로 clang을 C++ 컴파일러로 사용합니다. 그러나 환경에 따라 g++ 컴파일러를 사용하는 것이 필요할 수도 있습니다.</p>

<p>• 먼저, clang이나 g++이 설치되어 있는지 확인하세요</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>clang <span class="nt">--version</span>
g++ <span class="nt">--version</span>
</code></pre></div></div>

<p>• clang이 기본 컴파일러로 설정되어 있는지 확인하기 위해 다음 명령어를 입력해 보세요:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>gcc
</code></pre></div></div>

<!-- ```bash
eval $(/opt/homebrew/bin/brew shellenv)
``` -->

<h2><br /></h2>
<p><br /></p>
<h1 id="웹-서칭">웹 서칭</h1>

<p><strong>해결과정</strong> <br />
터미널 내 zsh 환경변수가 꼬여 모든 명령(brew, gem, bundle, clear 등)이 작동하지 않아 환경변수 초기화 후 재시도</p>

<p>명령이 작동하지 않는 문제는 해결 됐지만 번들링 도중 지속적으로 <code class="language-plaintext highlighter-rouge">an error occurred while installing eventmachine (1.2.7), and bundler cannot continue.</code> 오류가 발생하여 <code class="language-plaintext highlighter-rouge">eventmachine</code> 설치가 되지 않아 프로세스가 중지 되었다.</p>

<p>인터넷 서칭 결과 완벽한 해결책은 아니지만 <code class="language-plaintext highlighter-rouge">Gemfile</code>을 다음과 같이 수정하여 번들링을 성공했다.</p>

<p><sub><em>Gemfile</em></sub></p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gem</span> <span class="s1">'eventmachine'</span><span class="p">,</span> <span class="s1">'1.2.5'</span>
</code></pre></div></div>
<p>기본적으로 <code class="language-plaintext highlighter-rouge">eventmachine(1.2.7)</code> 설치 도중 오류가 발생한 것이며 1.2.5로 버전을 한 단계 낮춰 설치하도록 코드를 수정하여 문제를 해결했다. <br />
완벽한 해결책은 아니지만 작동에는 문제가 없어 보이며 추후 Apple Silicon Mac에서 1.2.7버전 설치를 시도해볼 것이다.</p>]]></content><author><name>김휘재 Hwijae Kim</name><email>dusan960766@gmail.com</email></author><category term="Research" /><category term="jekyll" /><category term="macos" /><category term="apple silicon" /><summary type="html"><![CDATA[Chat GPT]]></summary></entry><entry><title type="html">안녕하세요</title><link href="http://localhost:4000/research/hello/" rel="alternate" type="text/html" title="안녕하세요" /><published>2024-10-01T00:00:00+09:00</published><updated>2024-10-01T00:00:00+09:00</updated><id>http://localhost:4000/research/hello</id><content type="html" xml:base="http://localhost:4000/research/hello/"><![CDATA[<p>Jekyll을 이용하여 Github Pages를 만들었습니다. <br />
아직 시험단계로 보완할 부분이 많습니다.</p>

<p><b>키워드<b> <br />
성실한, 신뢰감 있는, 창의적인</b></b></p>

<p><br /><br /></p>

<p>이력서 폼(초안) <br />
<a href="https://docs.google.com/spreadsheets/d/16iekyjOCZ4u5HfsAWDzgVfGrRHkdvQHLVTnzvRlXRsc/edit?gid=0#gid=0">구글시트</a></p>

<p><br /><br /></p>

<p>Instagram: <a href="https://instagram.com/hwijae_portfolio">@hwijaekim_portfolio</a> <br />
Behance: <a href="https://www.behance.net/hwijaekim">HwijaeKim</a> <br />
LinkedIn: <a href="https://www.linkedin.com/in/hwijaekim/">HwijaeKim</a> <br />
Github: <a href="https://github.com/HwijaeKim">HwijaeKim</a> <br /></p>

<p><br /><br /></p>

<p>—제작한 페이지— <br />
<a href="https://hwijaekim.github.io/nocssclub_minigame">No CSS Club MiniGame</a> <br />
<a href="https://hwijaekim.github.io/blueprint2024">청사진(공모전)</a> <br />
<a href="https://hwijaekim.github.io/unionpt.github.io">자기PR페이지(교내)</a></p>]]></content><author><name>김휘재 Hwijae Kim</name><email>dusan960766@gmail.com</email></author><category term="Research" /><category term="update" /><summary type="html"><![CDATA[Jekyll을 이용하여 Github Pages를 만들었습니다. 아직 시험단계로 보완할 부분이 많습니다.]]></summary></entry></feed>